name: CI - Build and Release Tag

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Get Latest Tag
        id: get_tag
        run: |
          git fetch --tags
          latest_tag=$(git tag --sort=-v:refname | head -n 1)
          echo "Latest tag: $latest_tag"
          echo "tag=${latest_tag:-0.1.0}" >> "$GITHUB_OUTPUT"

      - name: Determine Version Bump
        id: version
        run: |
          # Set default to patch if no marker found
          bump="patch"

          # Check last commit message or PR title
          message=$(git log -1 --pretty=%B)

          if echo "$message" | grep -iqE '\[major\]'; then
            bump="major"
          elif echo "$message" | grep -iqE '\[minor\]'; then
            bump="minor"
          fi

          echo "Bump type: $bump"
          echo "bump=$bump" >> "$GITHUB_OUTPUT"

      - name: Calculate Next Version
        id: semver
        run: |
          current=${{ steps.get_tag.outputs.tag }}
          IFS='.' read -r major minor patch <<<"${current#v}"

          bump=${{ steps.version.outputs.bump }}

          case "$bump" in
            major)
              new_version="$((major + 1)).0.0"
              ;;
            minor)
              new_version="$major.$((minor + 1)).0"
              ;;
            patch)
              new_version="$major.$minor.$((patch + 1))"
              ;;
          esac

          echo "new_version=$new_version" >> "$GITHUB_OUTPUT"

      - name: Create and Push Tag
        run: |
          new_tag="v${{ steps.semver.outputs.new_version }}"
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag "$new_tag"
          git push origin "$new_tag"
